{"version":3,"sources":["redux/contacts/actions.js","components/routes/Private.js","components/routes/Public.js","components/Navigation/AuthNav.js","components/Navigation/Navigation.js","components/Navigation/UserMenu.js","components/Navigation/AppBar.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","redux/auth/selectors.js","redux/auth/thunks.js","components/Navigation/Navigation.module.css","redux/auth/slices.js"],"names":["filterValue","createAction","PrivateRoute","children","redirectTo","useSelector","getAuth","to","PublicRoute","restricted","AuthNav","className","s","nav","text","Navigation","isAuth","React","anchorEl","setAnchorEl","console","log","container","IconButton","size","edge","onClick","event","currentTarget","sx","mr","Typography","variant","component","flexGrow","styles","avatar","marginRight","color","backgroundColor","name","UserMenu","dispatch","useDispatch","contact","getName","Avatar","alt","src","style","Button","type","logoutThunk","justifyContent","MenuAppBar","handleClose","Box","AppBar","position","Toolbar","MenuItem","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","Home","lazy","Contacts","Login","Register","NotFound","App","isRefresh","getRefresh","data","useFetchContactsQuery","useEffect","currentThunk","fallback","CircularProgress","path","element","Public","Private","contactFilter","createReducer","actions","_","payload","authPersistConfig","key","storage","whitelist","authPersistReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","contactsApiSlice","store","configureStore","reducer","auth","reducerPath","devTools","process","storeContacts","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","state","user","getFilter","filter","BASE_USER_URL","axios","defaults","baseURL","registerThunk","createAsyncThunk","a","rejectWithValue","fetch","method","headers","body","JSON","stringify","res","json","error","message","loginThunk","getState","token","Error","Authorization","module","exports","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","BASE_CONTACT_URL","contacts","createApi","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","result","err","arg","map","addNewContact","mutation","url","invalidatesTags","deleteContact","setFilter","useAddNewContactMutation","useDeleteContactMutation"],"mappings":"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","file":"static/js/main.b58e8038.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const filterValue = createAction ('filter/value');\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { getAuth } from '../../redux/auth/selectors';\n\nconst PrivateRoute = ({ children, redirectTo = '/' }) => {\n  const isAuth = useSelector(getAuth);\n  return isAuth ? children : <Navigate to={redirectTo} />;\n};\nexport default PrivateRoute;\n\n\n// const PrivateRoute = ({isAuth, component: C}) => {\n//     return (\n//         <>\n//         {isAuth ? <C/> : <Navigate to='/login'/>}\n\n//         </>\n//     )\n// }\n// export default PrivateRoute;\n","import { Navigate } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { getAuth } from '../../redux/auth/selectors';\n\nconst PublicRoute = ({ children, restricted = false, redirectTo = '/' }) => {\n  const isAuth = useSelector(getAuth);\n  const shouldRedirect = isAuth && restricted;\n  return shouldRedirect ? <Navigate to={redirectTo} /> : children;\n};\nexport default PublicRoute;\n\n// import { Navigate } from 'react-router';\n\n// const PublicRoute = ({isAuth, component: C}) => {\n//     return (\n//         <>\n//         {isAuth ? <Navigate to='/contacts'/> : <C/>}\n\n//         </>\n//     )\n// }\n// export default PublicRoute;\n","import s from \"./Navigation.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AuthNav() {\n  return (\n   <nav >\n       <div className={s.nav}>\n      <Link to=\"/login\"\n            className={s.text}>\n            Log in\n            </Link>\n      <Link to=\"/register\"\n            className={s.text}>\n            Sign up\n      </Link>\n      </div>\n    </nav>\n  );\n}\n","import * as React from 'react';\nimport s from \"./Navigation.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton'\nimport { getAuth } from '../../redux/auth/selectors'\n\nexport default function Navigation() {\n  const isAuth= useSelector(getAuth);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  console.log(anchorEl)\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  return (\n    <nav>\n      <ul className={s.container}>\n        <li >\n          <Link  to=\"/\" className={s.text} >\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            aria-label=\"home\"\n            onClick={handleMenu}\n            sx={{ mr: 1 }}>\n            <HomeIcon />\n          </IconButton>\n          </Link>\n          </li>\n{isAuth &&\n         <li  >\n          <Link  to=\"/contacts\" className={s.text}>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Contacts\n          </Typography>\n          </Link>\n        </li>\n         }\n      </ul>\n    </nav>\n  );\n}\n","import s from \"./Navigation.module.css\";\nimport Button from '@mui/material/Button';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { logoutThunk } from '../../redux/auth/thunks';\nimport { getName } from '../../redux/auth/selectors';\n\n  const styles = {\n    avatar: {\n      marginRight: 10,\n      color: 'black',\n      backgroundColor: 'teal'\n    },\n    name: {}\n  }\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n   const contact = useSelector(getName);\n\n  const handleLogout = () => {\n    dispatch(logoutThunk())\n  }\n\n  return (\n      <div className={s.container}>\n      <Avatar alt='name' src=\"/images/avatar/1.jpg\" style= {styles.avatar} >{contact.name}\n      </Avatar>\n          <Typography style= {styles.name} variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Welcome, {contact.name}\n          </Typography>\n\n        <Button\n        type=\"button\"\n        variant=\"none\"\n        onClick={handleLogout}\n        size=\"small\"\n        color=\"grey\"\n      > <LogoutIcon/>\n      </Button>\n      </div>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { getAuth } from '../../redux/auth/selectors';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport AuthNav from './AuthNav';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\n\nconst styles = {\n  container: {\n    color: '#212529',\n    justifyContent: 'space-around',\n    backgroundColor: '#1c5d67'\n  },\n}\n\nexport default function MenuAppBar() {\n  const isAuth= useSelector(getAuth)\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 2}}  >\n      <AppBar position=\"static\">\n        <Toolbar style= {styles.container} >\n        <Navigation/>\n          {!isAuth ? (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem to=\"/login\" onClick={handleClose}>\n                  <AuthNav/>\n                </MenuItem>\n              </Menu>\n            </div>\n          ) : (\n          <MenuItem onClick={handleClose}>\n            <UserMenu/>\n          </MenuItem>\n        )\n          }\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import \"./App.css\";\nimport { useEffect,lazy, Suspense} from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PrivateRoute from './components/routes/Private';\nimport PublicRoute from './components/routes/Public';\nimport ButtonAppBar from \"./components/Navigation/AppBar\";\nimport { currentThunk } from './redux/auth/thunks';\nimport { useFetchContactsQuery } from './redux/auth/slices';\nimport { getAuth, getRefresh } from './redux/auth/selectors';\n// import Home from './components/pages/Home/Home';\n// import Contacts from './components/pages/Contacts/Contacts';\n// import Login from './components/pages/auth/Login';\n// import Register from './components/pages/auth/Register';\n// import NotFound from './components/pages/NotFound/NotFound';\n\n const Home = lazy(() =>\n   import(\"./components/pages/Home/Home\" /* webpackChunkName: \"Home\" */))\n const Contacts = lazy(() =>\n   import(\"./components/pages/Contacts/Contacts\" /* webpackChunkName: \"Contacts\" */));\n const Login = lazy(() =>\n   import(\"./components/pages/auth/Login\" /* webpackChunkName: \"Login\" */));\n const Register = lazy(() =>\n   import(\"./components/pages/auth/Register\" /* webpackChunkName: \"Register\" */));\n const NotFound = lazy(() =>\n   import(\"./components/pages/NotFound/NotFound\" /* webpackChunkName: \"NotFound\" */));\n\n\nfunction App () {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(getAuth);\n  const isRefresh = useSelector(getRefresh);\n  const {data} = useFetchContactsQuery();\n\n    useEffect(() => {\n  if (!isAuth)\n    data &&\n     dispatch(currentThunk(data))\n    },[data,dispatch,isAuth])\n\n  return (\n    !isRefresh && (\n    <div className=\"App\">\n      <ButtonAppBar/>\n      <main>\n        <div className=\"container\">\n        <Suspense fallback={<CircularProgress />}>\n         <Routes>\n          <Route\n              path=\"/\"\n              element={\n                <PublicRoute restricted redirectTo=\"/contacts\" >\n                 <Home/>\n               </PublicRoute>\n              }\n            />\n            <Route\n              path=\"/contacts\"\n              element={\n                <PrivateRoute restricted redirectTo=\"/login\" >\n                  <Contacts />\n                 </PrivateRoute>\n              }\n            />\n            <Route\n              path=\"/register\"\n              element={\n                <PublicRoute restricted>\n                  <Register/>\n                 </PublicRoute>\n              }\n            />\n            <Route\n              path=\"/login\"\n              element={\n                <PublicRoute restricted>\n                  <Login/>\n                 </PublicRoute>\n              }\n            />\n            <Route element={<NotFound />} />\n          </Routes>\n        </Suspense>\n        </div>\n      </main>\n      {/* <Footer /> */}\n    </div>\n    )\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit'\nimport * as actions from \"./actions\";\n\nexport const contactFilter = createReducer ('', {\n   [actions.filterValue]: ( _, {payload}) => payload\n})\n","// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport authReducer, {contactsApiSlice} from './auth/slices';\nimport {contactFilter} from './contacts/reducers'\n\nconst authPersistConfig = {\n        key: 'auth',\n        storage,\n        whitelist: ['token'],\n    }\nconst authPersistReducer = persistReducer(authPersistConfig, authReducer);\n\nconst middleware = [...getDefaultMiddleware ({\n       serializableCheck: {\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n       },\n   }).concat(contactsApiSlice.middleware)\n  //  logger\n   ];\n\nconst store = configureStore({\n       reducer: {\n         auth: authPersistReducer,\n         [contactsApiSlice.reducerPath]: contactsApiSlice.reducer,\n         filter: contactFilter,\n        // filter: filterSlice.reducer,\n       },\n       middleware,\n    devTools: process.env.NODE_ENV === 'development',\n})\n\nconst persistor = persistStore (store);\n\nexport const storeContacts = {store, persistor};\n","import \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { storeContacts } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={storeContacts.store}>\n    <PersistGate loading=\"Loading...\" persistor={storeContacts.persistor}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const getName = state => state.auth.user;\nexport const getToken = state => state.auth.token;\nexport const getFilter = state => state.filter;\nexport const getAuth = state => state.auth.isAuth;\nexport const getRefresh = state => state.auth.isRefresh;\n","import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst BASE_USER_URL = `https://connections-api.herokuapp.com`;\nconst userRegister = '/users/signup';\nconst userLogin = '/users/login';\nconst userLogout = '/users/logout';\nconst userCurrent = '/users/current';\n\naxios.defaults.baseURL = BASE_USER_URL;\n\nexport const registerThunk = createAsyncThunk('users/signup', async(user, {rejectWithValue}) => {\n      try {\n           const res = await fetch(BASE_USER_URL + userRegister, {\n               method: 'POST',\n               headers: {\n                   \"Content-Type\": \"application/json\"\n              },\n               body: JSON.stringify(user),\n           });\n           const data = await res.json();\n         //   console.log(data);\n             return data\n       } catch (err) {\n           rejectWithValue({ error: err.message})\n       }\n});\n\nexport const loginThunk = createAsyncThunk('users/login', async(user, {rejectWithValue}) => {\n     try {\n         const res = await fetch(BASE_USER_URL + userLogin, {\n             method: 'POST',\n             headers: {\n                 \"Content-Type\": \"application/json\"\n            },\n             body: JSON.stringify(user),\n         });\n         const data = await res.json();\n        //  console.log(data);\n         return data\n     } catch (err) {\n         rejectWithValue({ error: err.message})\n     }\n})\n\nexport const currentThunk = createAsyncThunk('users/current', async(user, {rejectWithValue, getState}) => {\n    const state = getState();\n    const token = state.auth.token;\n     if (!token) {\n        throw new Error(200);\n      }\n     try {\n         const res = await fetch(BASE_USER_URL + userCurrent, {\n             method: 'GET',\n             headers: {\n                Authorization: state.auth.token\n             }});\n         const data = await res.json();\n        //  console.log(data);\n         return data\n     } catch (err) {\n         rejectWithValue({ error: err.message})\n     }\n})\n\nexport const logoutThunk = createAsyncThunk('users/logout', async(_, {rejectWithValue,getState}) => {\n    const state = getState();\n    if (!state.auth.token) return;\n     try {\n        //  const res =\n         await fetch(BASE_USER_URL + userLogout, {\n             method: 'POST',\n             headers: {\n                Authorization: state.auth.token\n             }});\n        //  console.log(res);\n     } catch (err) {\n         rejectWithValue({ error: err.message})\n     }\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navigation_container___wsPy\",\"text\":\"Navigation_text__2Q3os\",\"nav\":\"Navigation_nav__INfuO\"};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { registerThunk, loginThunk, currentThunk, logoutThunk } from \"./thunks\";\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState:{\n        user: { name: null, email: null },\n        token: null,\n        error: null,\n        isAuth: false,\n        isRefresh: false,\n    },\n     extraReducers: {\n         [registerThunk.fulfilled](state,action){\n             return {\n                 ...state,\n                 user: action.payload.user,\n                 token: action.payload.token,\n                 isAuth: true,\n             }\n         },\n         [loginThunk.fulfilled](state,action){\n             return {\n                 ...state,\n                 user: action.payload.user,\n                 token: action.payload.token,\n                 isAuth: true,\n             }\n         },\n         [logoutThunk.fulfilled](state,_){\n            return {\n                ...state,\n                user: { name: null, email: null },\n                token: null,\n                isAuth: false,\n            }\n        },\n         [currentThunk.pending](state,_){\n             return {\n                ...state,\n                  isRefresh: true,\n             }\n         },\n         [currentThunk.fulfilled](state,action, token){\n             return {\n                  ...state,\n                 user: action.payload,\n                 isAuth:true,\n                 isRefresh: false,\n             }\n         },\n         [currentThunk.rejected](state,action){\n             return {\n                 ...state,\n                 error: action.payload,\n                 isRefresh: false,\n             }\n         },\n     }\n})\n\nexport default authSlice.reducer;\n\n//  CONTACTS\nconst UNIQUE_ID = `61968c60af46280017e7e165`;\nconst BASE_CONTACT_URL = `https://${UNIQUE_ID}.mockapi.io/api/v1`;\nconst contacts = '/contacts'\n\nexport const contactsApiSlice = createApi ({\n    reducerPath: 'Contacts',\n    baseQuery: fetchBaseQuery({baseUrl: BASE_CONTACT_URL}),\n    tagTypes: [`Contact`],\n    endpoints: (builder) => {\n        return {\n\n        fetchContacts: builder.query({ query: ()=> contacts,\n        providesTags: (result, err, arg)=> (\n          [...result.map(({id})=> {\n           return {\n               type: \"Contact\",\n               id\n           }})\n        ]\n        )\n        }),\n\n        addNewContact: builder.mutation({ query: (contact)=> {\n            return {\n                method: `POST`,\n                url: contacts,\n                body: contact\n            }\n        },\n        invalidatesTags: [`Contact`]\n        }),\n\n        deleteContact: builder.mutation({ query: (id)=> {\n            return {\n                method: `DELETE`,\n                url: `${contacts}/${id}`\n            }\n        },\n        invalidatesTags: (result,error,id) => [{type: \"Contact\",\n        id}]\n        }),\n}}\n})\n\nexport const filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducer: {\n        'filter/value':(_,action) => action.payload,\n        },\n    }\n)\n export const {setFilter} = filterSlice.actions;\n\nexport const {useFetchContactsQuery,useAddNewContactMutation,useDeleteContactMutation} = contactsApiSlice\n"],"sourceRoot":""}